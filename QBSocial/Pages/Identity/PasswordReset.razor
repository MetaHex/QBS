@page "/passwordreset-callback"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation

@if (isWorking != 0)
{
    <div class="mt-4 mx-4">
        <div class="display-4">Something Went Wrong!</div>
        <p>Error: @_errorMessage</p>
        <p>Description: @_errorDescription</p>
        <br />
        <div>Go <a href="/">Home</a></div>
    </div>

}

@code {
    private string _errorMessage;
    private string _errorDescription;
    private int isWorking = 0;

    protected override void OnInitialized()
    {
        var state = GetParameter(new Uri(Navigation.Uri).Query, "state");

        if (state == "12345")
        {
            _errorMessage = $"{GetParameter(new Uri(Navigation.Uri).Query, "error")}";
            isWorking = 1;
            if (_errorMessage == "")
            {
                Navigation.NavigateTo("/");
            }
            isWorking = 2;
            _errorDescription = $"{GetParameter(new Uri(Navigation.Uri).Query, "error_description")}";
            isWorking = 3;
        }
    }

    public static string GetParameter(string queryString, string key)
    {
        if (string.IsNullOrEmpty(queryString) || queryString == "?")
        {
            return null;
        }

        var scanIndex = 0;
        if (queryString[0] == '?')
        {
            scanIndex = 1;
        }

        var textLength = queryString.Length;
        var equalIndex = queryString.IndexOf('=');
        if (equalIndex == -1)
        {
            equalIndex = textLength;
        }

        while (scanIndex < textLength)
        {
            var ampersandIndex = queryString.IndexOf('&', scanIndex);
            if (ampersandIndex == -1)
            {
                ampersandIndex = textLength;
            }

            if (equalIndex < ampersandIndex)
            {
                while (scanIndex != equalIndex && char.IsWhiteSpace(queryString[scanIndex]))
                {
                    ++scanIndex;
                }
                var name = queryString[scanIndex..equalIndex];
                var value = queryString.Substring(equalIndex + 1, ampersandIndex - equalIndex - 1);
                var processedName = Uri.UnescapeDataString(name.Replace('+', ' '));
                if (string.Equals(processedName, key, StringComparison.OrdinalIgnoreCase))
                {
                    return Uri.UnescapeDataString(value.Replace('+', ' '));
                }

                equalIndex = queryString.IndexOf('=', ampersandIndex);
                if (equalIndex == -1)
                {
                    equalIndex = textLength;
                }
            }
            else
            {
                if (ampersandIndex > scanIndex)
                {
                    var value = queryString[scanIndex..ampersandIndex];
                    if (string.Equals(value, key, StringComparison.OrdinalIgnoreCase))
                    {
                        return string.Empty;
                    }
                }
            }

            scanIndex = ampersandIndex + 1;
        }

        return null;
    }
}